
// WAHH's
var lst = new Array(

// 1.1 Recon and analysis: Map the Application's Content
"Map visible content","Consult public resources","Discover hidden content", "Discover default content","Enumerate identifier-specified Functions","Discover debug parameters",

// 1.2 Recon and analysis : Analyze the Application	
"Identify functionality", "Identify data entry points","Identify the technologies used","Map the attack surface",
	
// 2. Client-Side Controls
"Test transmission of data via the client","Test client-side controls over user input","Check for DOM-based vulnerabilities (XSS,Open Redirection)","Check for frame injection (client-side:JavaScript Protection)", "Test browser extension components",

// 3.1 Access Handling: Authentication Mechanism 	
"Understand the authentication mechanism", "Test password quality","Test for username enumeration","Test resilience to password guessing","Test any account recovery function","Test any `remember me` function","Test any impersonation function","Test username uniqueness", "Test predictability of autogenerated credentials", "Check for unsafe transmission of credentials", "Check for unsafe distribution of credentials", "Test for fail-open conditions","Test any multi-stage mechanisms", "Exploit any vulnerabilities to gain unauthorized access",

// 3.2 Access Handling: Session Management Mechanism
"Understand the session management mechanism", "Test tokens for meaning","Test tokens for predictability","Check for insecure transmission of tokens","Check for disclosure of tokens in logs","Check mapping of tokens to sessions","Check session termination","Check for session fixation","Check for cross-site request forgery","Check cookie scope",

// 3.3 Access Handling: Access Controls
"Understand the access control requirements","Test with multiple accounts","Test with limited access","Test for insecure access control methods (request parameters, Referer header, etc)",

// 4. Input Handling: Input-based Vulnerabilities
"Fuzz all request parameters","Test for SQL injection","Identify reflected request parameters","Test for reflected XSS","Test for HTTP header injection","Test for open redirection","Test for stored attacks","Test for OS command injection","Test for path traversal","Test for script injection","Test for file inclusion", 

// 4. Input Handling: Function-Specific Input Vulnerabilities
"Test for SMTP injection","Test for native software vulnerabilities","Test for SOAP injection","Test for LDAP injection","Test for back-end request injection","Test for XPath injection", "Test for XXE injection",

// 5. Logic Flaws
"Identify key attack surface","Test multi-stage processes for logic flaws","Test handling of incomplete input","Test trust boundaries","Test transaction logic",

// 6. Aplication Hosting: Shared Hosting Vulnerabilities
"Test segregation in shared infrastructures","Test segregation between ASP-hosted applications",
	 
// 6. Aplication Hosting: Application Server Vulnerabilities
"Test for default credentials","Test for default content","Test for Dangerous HTTP methods","Test for Proxy functionality","Virtual hosting mis-configuration","Test for web server software bugs", "Test for web application firewalling", "Check for weak SSL ciphers", "Check for frame injection (server-side:X-Frame-Options)",

// 7. Miscelleneous check
"Decipher persistent cookies","Caching Directives (either response header or page source)","Sensitive data in URL parameters","Sensitive forms with autocomplete enabled","Browser plugins local storage (Java Applet:Registry, SiliverLight:File, Flash:File)",  "Check Same-Origin Policy Configuration", "Follow up any information leakage");


var lst_bak = new Array;
lst_bak=lst_bak.concat(lst);
 
var key = new Array();
var phase = new Array("Recon and analysis","Test handling of access : Authentication","Test handling of access : Session handling","Test handling of access : Access controls","Test handling of input","Test application logic" , "Assess application hosting","Miscellaneous tests");

// 1. Recon and analysis: Map the Application's Content
key["Map visible content"]=0;key["Consult public resources"]=0;key["Discover hidden content"]=0;key["Discover default content"]=0;key["Enumerate identifier-specified Functions"]=0;key["Discover debug parameters"]=0;

// 1. Recon and analysis : Analyze the Application
key["Identify functionality"]=1;key["Identify data entry points"]=1;key["Identify the technologies used"]=1;key["Map the attack surface"]=1;

// 2. Client-side controls
key["Test transmission of data via the client"]=2;key["Test client-side controls over user input"]=2;key["Check for DOM-based vulnerabilities (XSS,Open Redirection)"]=2;key["Check for frame injection (client-side:JavaScript Protection)"]=2; key["Test browser extension components"]=2;



// 3.1 Access Handling: Authentication Mechanism 	
key["Understand the authentication mechanism"]=3; key["Test password quality"]=3;key["Test for username enumeration"]=3;key["Test resilience to password guessing"]=3;key["Test any account recovery function"]=3;key["Test any `remember me` function"]=3;key["Test any impersonation function"]=3;key["Test username uniqueness"]=3; key["Test predictability of autogenerated credentials"]=3; key["Check for unsafe transmission of credentials"]=3; key["Check for unsafe distribution of credentials"]=3; key["Test for fail-open conditions"]=3;key["Test any multi-stage mechanisms"]=3; key["Exploit any vulnerabilities to gain unauthorized access"]=3;

// 3.2 Access Handling: Session Management Mechanism
key["Understand the session management mechanism"]=4; key["Test tokens for meaning"]=4;key["Test tokens for predictability"]=4;key["Check for insecure transmission of tokens"]=4;key["Check for disclosure of tokens in logs"]=4;key["Check mapping of tokens to sessions"]=4;key["Check session termination"]=4;key["Check for session fixation"]=4;key["Check for cross-site request forgery"]=4;key["Check cookie scope"]=4;

// 3.3 Access Handling: Access Controls
key["Understand the access control requirements"]=5;key["Test with multiple accounts"]=5;key["Test with limited access"]=5;key["Test for insecure access control methods (request parameters, Referer header, etc)"]=5;

// 4. Input Handling: Input-based Vulnerabilities
key["Fuzz all request parameters"]=6;key["Test for SQL injection"]=6;key["Identify reflected request parameters"]=6;key["Test for reflected XSS"]=6;key["Test for HTTP header injection"]=6;key["Test for open redirection"]=6;key["Test for stored attacks"]=6;key["Test for OS command injection"]=6;key["Test for path traversal"]=6;key["Test for script injection"]=6;key["Test for file inclusion"]=6; 


// 4. Input Handling: Function-Specific Input Vulnerabilities
key["Test for SMTP injection"]=7;key["Test for native software vulnerabilities"]=7;key["Test for SOAP injection"]=7;key["Test for LDAP injection"]=7;key["Test for back-end request injection"]=7;key["Test for XPath injection"]=7; key["Test for XXE injection"]=7;



// 5. Logic Flaws
key["Identify key attack surface"]=8;key["Test multi-stage processes for logic flaws"]=8;key["Test handling of incomplete input"]=8;key["Test trust boundaries"]=8;key["Test transaction logic"]=8;

// 6. Aplication Hosting: Shared Hosting Vulnerabilities
key["Test segregation in shared infrastructures"]=9; key["Test segregation between ASP-hosted applications"]=9;

	 
// 6. Aplication Hosting: Application Server Vulnerabilities
key["Test for default credentials"]=10;key["Test for default content"]=10;key["Test for Dangerous HTTP methods"]=10;key["Test for Proxy functionality"]=10;key["Virtual hosting mis-configuration"]=10;key["Test for web server software bugs"]=10; key["Test for web application firewalling"]=10; key["Check for weak SSL ciphers"]=10; key["Check for frame injection (server-side:X-Frame-Options)"]=10;

// 7. Miscelleneous check

key["Decipher persistent cookies"]=11;key["Caching Directives (either response header or page source)"]=11;key["Sensitive data in URL parameters"]=11;key["Sensitive forms with autocomplete enabled"]=11;key["Browser plugins local storage (Java Applet:Registry, SiliverLight:File, Flash:File)"]=11;  key["Check Same-Origin Policy Configuration"]=11; key["Follow up any information leakage"]=11;


var firstTime = true;
var data = "";
function $(id){return document.getElementById(id);} 

function populate()
{
var ck = $("ck");
ck.innerHTML = '';
var aa = false;var ab = false; var ac = false; 
var b=false;var c=false; var d = false;
var ea=false;var eb=false;
var f=false;var ga=false;var gb=false;
var h = false;var i = false;
	for (var i=0;i<=lst.length-1;i++)
	{	
		//console.log(i + ":" + lst[i] + ": " + key[lst[i]]);	
		switch(key[lst[i]])
		{			
			case 0:
			if(aa===false){
			data += '<fieldset class="c1"><legend>Phase 1</legend><h2>Phase 1. Recon and Analysis </h2><h4>Phase 1.1 Map the application&nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-1\').style.display!=\'none\'){$(\'phase-1\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-1\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[&#8212;]</a></h4><span style="display:none" id="phase-1">';aa=true;}
			break;
			case 1:
			if(ab===false){
			data += '</span><h4>Phase 1.2 Analyse the application &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-1.2\').style.display!=\'none\'){$(\'phase-1.2\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-1.2\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[&#8212;]</a></h4><span style="display:none" id="phase-1.2">';ab=true;}
			break;		
			
			case 2:			
			if(ac===false){
			data += '</span></fieldset><fieldset class="c1"><legend>Phase 2</legend><h2>Phase 2. Test Client-Side Controls&nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-2\').style.display!=\'none\'){$(\'phase-2\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-2\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[&#8212;]</a></h4><span style="display:none" id="phase-2">';ac=true;}		
			break;
			
			case 3:
			if(b===false){data += '</fieldset><fieldset class="c2"><legend>Phase 3</legend></span><h2>Phase 3. Test Access Handling</h2><h4>Phase 3.1 &nbsp;&nbsp;Authentication Mechanism  &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-3\').style.display!=\'none\'){$(\'phase-3\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-3\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-3">';b=true;}
			break;
			
			case 4:
			if(c===false){data += '</span><h4>Phase 3.2&nbsp;&nbsp; Session Management Mechanism &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-3.2\').style.display!=\'none\'){$(\'phase-3\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-3.2\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-3.2">';c=true;}
			break;	
			
			case 5:
			if(d===false){data += '</span><h4>Phase 3.3&nbsp;&nbsp; Access Controls &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-3.3\').style.display!=\'none\'){$(\'phase-3.3\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-3.3\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-3.3">';d=true;}
			break;			
			
			case 6:
			if(ea===false){data +='</fieldset><fieldset class="c3"><legend>Phase 4</legend></span><h2>Phase 4. Test Input Handling </h2><h4>Phase 4.1 Input-based Vulnerabilities&nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-4\').style.display!=\'none\'){$(\'phase-4\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-4\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-4">';ea=true;}
			break;				
			case 7:
			if(eb===false){data +='</span><h4>Phase 4.2 Function-Specific Input Vulnerabilities&nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-4.2\').style.display!=\'none\'){$(\'phase-4.2\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-4.2\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-4.2">';eb=true;}
			break;				
			case 8:
			if(f===false){data +='</fieldset><fieldset class="c4"><legend>Phase 5</legend></span><h2>Phase 5. Test Application Logic &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-5\').style.display!=\'none\'){$(\'phase-5\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-5\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h2><span style="display:none" id="phase-5">';f=true;}
			break;				
			case 9:
			if(ga===false){data += '</fieldset><fieldset class="c5"><legend>Phase 6</legend></span><h2>Phase 6. Assess application hosting </h2><h4>Phase 6.1 Shared Hosting &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-6\').style.display!=\'none\'){$(\'phase-6\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-6\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-6">';ga=true;}
			break;	
			case 10:
			if(gb===false){data += '</span><h4>Phase 6.2. Application Server &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-6.2\').style.display!=\'none\'){$(\'phase-6.2\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-6.2\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h4><span style="display:none" id="phase-6.2">';gb=true;}
			break;				
			case 11:
			if(h===false){data += '</fieldset><fieldset class="c6"><legend>Miscellaneous</legend></span><h2>Miscellaneous tests &nbsp;&nbsp;<a class="toggle" href="javascript:void(0)" onclick="if($(\'phase-7\').style.display!=\'none\'){$(\'phase-7\').style.display=\'none\';this.innerHTML=\'[+]\';}else{$(\'phase-7\').style.display=\'block\';this.innerHTML=\'[&#8212;]\';}">[+]</a></h2><span style="display:none" id="phase-7">';h=true;}
			break;							
		}
		// used vars: rt, ck, vt, vk,  
		
		// used vars: rt, ck, vt, vk, lnk,note
			
                        /*
		data += (i+1) + ". <input type='checkbox' onclick='if($(\"rt-" + i + "\").disabled==true){$(\"rt-" + i + "\").disabled=\"\";$(\"lnk-" + i + "\").className=\"strike\";$(\"rt-" + i + "\").focus();}else{$(\"lnk-" + i + "\").className=\"list\";$(\"rt-" + i + "\").disabled=\"disabled\";}' id='ck-" + i + "'\/><a class='list' id='lnk-"+i+"'  href='javascript:void(0)' onclick='if($(\"ck-" + i + "\").checked==1){$(\"lnk-" + i + "\").className=\"list\";$(\"ck-" + i + "\").checked=0;$(\"rt-" + i + "\").disabled=\"disabled\";}else{$(\"lnk-" + i + "\").className=\"strike\";$(\"ck-" + i + "\").checked=1;$(\"rt-" + i + "\").disabled=\"\";$(\"rt-" + i + "\").focus();}'>" + lst[i] + "</a>&nbsp;&nbsp;&nbsp;";		
		data += " &raquo; Vulnerable: <a href='javascript:void(0)' onclick='$(\"vkyes-" + i + "\").checked=\"1\";$(\"vt-" + i + "\").innerHTML=\"YES\"'><input type='radio' value='1' id='vkyes-" + i + "' name='vk-"    + i + "' /> YES</a>&nbsp;&nbsp; ";
                data +=                      "<a href='javascript:void(0)' onclick='$(\"vkno-"  + i + "\").checked=\"1\";$(\"vt-" + i + "\").innerHTML=\"NO\"'><input  type='radio' value='0' id='vkno-"  + i + "'   id='vkno-"  + i + "' name='vk-" + i + "' /> No </a>";
                data +=                      "<a href='javascript:void(0)' onclick='$(\"vktbd-" + i + "\").checked=\"1\";$(\"vt-" + i + "\").innerHTML=\"TBD\"'><input type='radio' value='2' id='vktbd-" + i + "'   id='vktbd-" + i + "' name='vk-" + i + "' checked='checked' /> TBD </a>";
                data += "&#8212; <a class='note' id='note-"+i+"' href='javascript:void(0)' onclick='if($(\"rt-" + i + "\").style.display==\"block\"){$(\"rt-" + i + "\").style.display=\"none\";}else{$(\"rt-" + i + "\").style.display=\"block\"}$(\"rt-" + i + "\").focus();' title='Toggle note/result for this test to include it in report'>Result/Note:</a><br \/>";
                data += "<textarea cols='100' rows='15' onkeyup='if(this.value.length>0){$(\"note-"+i+"\").innerHTML=\"Result/Note**\";}else{$(\"note-"+i+"\").innerHTML=\"Result/Note:\";}' id='rt-"+i+"' style='display:none' disabled='disabled'><\/textarea><span id='vt-"+i+"' style='display:none'><\/span><br\/>";
                */
                var checked = function(){if(localStorage.getItem("ck-"+i)==="true"){return "checked"}else{return ""};}();
		data += (i+1) + ". <input type='checkbox' onclick='localStorage.setItem(\"ck-" + i + "\", $(\"ck-" + i + "\").checked);getstatus();' id='ck-" + i + "' " + checked + " /><span>" + lst[i] + "</span>";
                data += "<br\/>";               
	}
	
	ck.innerHTML = data;
	$('btnStatus').disabled = '';$('btnReport').disabled = '';
    $('loading').style.display='none';$('site').focus();
    if(firstTime!==true){window.location='#end';firstTime=true;}     
        
}